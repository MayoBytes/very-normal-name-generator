package com.thirdgallon.namegenerator.screens

import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.Button
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import cafe.adriel.voyager.core.model.rememberScreenModel
import cafe.adriel.voyager.core.screen.Screen
import com.thirdgallon.namegenerator.composables.BasicOptionsPanel
import com.thirdgallon.namegenerator.composables.ExpandableCard
import com.thirdgallon.namegenerator.generator.NameGenerator
import com.thirdgallon.namegenerator.models.OptionsModel
import org.jetbrains.compose.resources.ExperimentalResourceApi


object MainScreen : Screen {
    private val generator = NameGenerator()

    @OptIn(ExperimentalResourceApi::class)
    @Composable
    override fun Content() {
        val model = rememberScreenModel { OptionsModel() }
        var generated by remember { mutableStateOf(generator.generate(model.getOptions())) }

        Column(Modifier.fillMaxSize(), horizontalAlignment = Alignment.CenterHorizontally, verticalArrangement = Arrangement.Center) {
            Text(
                text = generated,
                fontWeight = FontWeight.Bold,
                fontSize = 40.sp,
            )
            Button(
                shape = RoundedCornerShape(32.dp),
                modifier = Modifier.padding(18.dp).fillMaxWidth(),
                onClick = {generated = generator.generate(model.getOptions()) }
            ) {
                Text(
                    text = "Generate Name",
                    fontSize = 24.sp,
                    modifier = Modifier.padding(vertical = 6.dp)
                )
            }
            ExpandableCard(text = "Generator Options") {
                BasicOptionsPanel(model)
            }
        }
    }
}